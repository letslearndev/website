---
import Layout from '../layouts/Layout.astro';

import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Card, CardTitle, CardHeader, CardContent, CardFooter, CardDescription } from "@/components/ui/card";

import { ChevronRight, Star, Server, Globe, Database, Code, Phone, Search } from "@/components/icons.tsx";

const categories = ['All', 'Web Development', 'Backend', 'Frontend', 'Mobile', 'Database', 'DevOps']

const courses = [
  {
    id: 0,
    title: 'Web Development Essentials',
    description: 'Foundation that everyone should grasp before start building Web / Mobile application',
    image: '/placeholder.svg?height=200&width=300',
    category: 'Frontend',
    icon: Globe,
    duration: '8 weeks',
    level: 'Beginner',
    rating: 4.8,
  },
  {
    id: 1,
    title: 'Advanced React Techniques',
    description: 'Master advanced React concepts including hooks, context, and performance optimization.',
    image: '/placeholder.svg?height=200&width=300',
    category: 'Frontend',
    icon: Globe,
    duration: '8 weeks',
    level: 'Advanced',
    rating: 4.8,
  },
  {
    id: 2,
    title: 'Node.js Microservices Architecture',
    description: 'Learn to build scalable microservices using Node.js and Docker.',
    image: '/placeholder.svg?height=200&width=300',
    category: 'Backend',
    icon: Server,
    duration: '10 weeks',
    level: 'Intermediate',
    rating: 4.6,
  },
  {
    id: 3,
    title: 'Full Stack JavaScript Development',
    description: 'Become a full stack developer using JavaScript, React, Node.js, and MongoDB.',
    image: '/placeholder.svg?height=200&width=300',
    category: 'Web Development',
    icon: Code,
    duration: '12 weeks',
    level: 'Beginner to Intermediate',
    rating: 4.9,
  },
  {
    id: 4,
    title: 'iOS App Development with Swift',
    description: 'Build iOS applications using Swift and the latest Apple technologies.',
    image: '/placeholder.svg?height=200&width=300',
    category: 'Mobile',
    icon: Phone,
    duration: '10 weeks',
    level: 'Intermediate',
    rating: 4.7,
  },
  {
    id: 5,
    title: 'Advanced SQL and Database Design',
    description: 'Master complex SQL queries, database optimization, and advanced database design principles.',
    image: '/placeholder.svg?height=200&width=300',
    category: 'Database',
    icon: Database,
    duration: '8 weeks',
    level: 'Advanced',
    rating: 4.5,
  },
  {
    id: 6,
    title: 'DevOps and CI/CD Pipelines',
    description: 'Learn to implement DevOps practices and set up efficient CI/CD pipelines.',
    image: '/placeholder.svg?height=200&width=300',
    category: 'DevOps',
    icon: Server,
    duration: '6 weeks',
    level: 'Intermediate to Advanced',
    rating: 4.8,
  },
]

const searchTerm = "";
const selectedCategory = "All";
---
<Layout title="Let's Learn Courses to explore">
<main class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
  <div class="px-4 py-6 sm:px-0">
    <div class="flex flex-col sm:flex-row justify-between items-center mb-8">
      <div class="relative w-full sm:w-64 mb-4 sm:mb-0">
        <!-- <Input
          type="text"
          placeholder="Search courses..."
          value={searchTerm}
          onChange={(e) => setSearchTerm(e.target.value)}
          className="pl-10"
        /> -->
        <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400" size={20} />
      </div>
      <div class="flex space-x-2 overflow-x-auto pb-2 sm:pb-0">
        {categories.map(category => (
          <Button
            key={category}
            variant={selectedCategory === category ? "default" : "outline"}

            className={`whitespace-nowrap ${
              selectedCategory === category
                ? 'bg-purple-600 hover:bg-purple-700 text-white'
                : 'bg-white dark:bg-gray-800 hover:bg-gray-100 dark:hover:bg-gray-700'
            }`}
          >
            {category}
          </Button>
        ))}
      </div>
    </div>
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
      {courses.map(course => (
        <Card key={course.id} className="overflow-hidden transition-all duration-300 hover:shadow-lg hover:shadow-purple-500/20 hover:-translate-y-1 dark:bg-gray-800">
          <div class="relative">
            <img src={course.image} alt={course.title} className="w-full h-48 object-cover" />
            <Badge className="absolute top-2 right-2 bg-purple-600">{course.category}</Badge>
          </div>
          <CardHeader>
            <CardTitle className="flex items-center space-x-2 text-xl font-bold">
              <course.icon className="w-6 h-6 text-purple-600 dark:text-purple-400" />
              <span>{course.title}</span>
            </CardTitle>
          </CardHeader>
          <CardContent>
            <p class="text-gray-600 dark:text-gray-300 mb-4">{course.description}</p>
            <div class="flex justify-between items-center text-sm text-gray-500 dark:text-gray-400">
              <span class="flex items-center">
                <Star className="w-4 h-4 text-yellow-400 mr-1" />
                {course.rating}
              </span>
              <span>{course.duration}</span>
              <span>{course.level}</span>
            </div>
          </CardContent>
          <CardFooter className="flex justify-between bg-gray-50 dark:bg-gray-700/50">
            <Button variant="outline" className="border-purple-500 text-purple-600 dark:text-purple-400 hover:bg-purple-100 dark:hover:bg-purple-900">
              Learn More
            </Button>
            <Button className="bg-purple-600 hover:bg-purple-700 text-white">
              Enroll Now
              <ChevronRight className="ml-2 h-4 w-4" />
            </Button>
          </CardFooter>
        </Card>
      ))}
    </div>
  </div>
</main>
</Layout>
